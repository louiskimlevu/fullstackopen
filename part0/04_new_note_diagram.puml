@startuml figure_04

title New note sequence

' This version has been update with current AWS icons and colors
!define AWSPuml https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v16.0/dist
!include AWSPuml/AWSCommon.puml
!include AWSPuml/AWSExperimental.puml
!include AWSPuml/General/User.puml
!include AWSPuml/General/Client.puml
!include AWSPuml/General/Traditionalserver.puml

!procedure $AWSIcon($service,$line1, $line2, $line3="")
participant "$line1\n$AWSImg($service)\n<b>$line2</b>\n$line3"
!endprocedure 


hide footbox
skinparam style strictuml
skinparam Sequence { 
    MessageAlignment left
}
skinparam Note {
    TextAlignment left
    FontColor black
    BackgroundColor #BUSINESS
}

skinparam shadowing false
skinparam MaxMessageSize 600
skinparam ArrowFontColor $AWS_COLOR_GRAY

' UserParticipant(client,,)
' ClientParticipant(client,Browser,)
' $AWSIcon(User,"//<< salut >>//", "<b>Romain</b>", "User") as user
$AWSIcon(User,"", "User", "") as user
$AWSIcon(Client,"", "Browser", "") as browser
$AWSIcon(Traditionalserver,"", "Express server", "Host: studies.cs.helsinki.fi") as server

user -> browser: fill the new note form\nwith "hello" text
user -> browser: submit the form


browser -> server: POST /exampleapp/new_note\nPayload: note=hello
activate browser $AWS_COLOR_SQUID
activate server $AWSColor(NetworkingContentDelivery)
note over server: - Create a new note\n- Save the note in runtime memory inside the notes array variable\n- Send a redirect
server --> browser: 302 redirect\nLocation: /exampleapp/notes
deactivate server
deactivate browser

browser -> server: GET /exampleapp/notes
activate browser $AWS_COLOR_SQUID
activate server $AWSColor(NetworkingContentDelivery)
note over server: - Generate HTML from a template string\n- Send the html in the HTTP response
server --> browser: 200 OK\nResponse: html content
deactivate server
deactivate browser

note over browser: - Parse HTML to build the DOM tree\n- Find external links to CSS and javascript and fetch them\n- Render HTML content

browser -> server: GET /exampleapp/main.css
activate browser $AWS_COLOR_SQUID
activate server $AWSColor(NetworkingContentDelivery)
note over server: - Send the CSS in the HTTP response
server --> browser: 200 OK\nResponse: CSS content
deactivate server
deactivate browser

note over browser: - Render CSS on the page


browser -> server: GET /exampleapp/main.js
activate browser $AWS_COLOR_SQUID
activate server $AWSColor(NetworkingContentDelivery)
note over server: - Send the javascript in the HTTP response
server --> browser: 200 OK\nResponse: javascript content
deactivate server
deactivate browser

note over browser: - Run the javascript code



group main.js
browser -> server: GET /exampleapp/data.json
activate browser $AWS_COLOR_SQUID
activate server $AWSColor(NetworkingContentDelivery)
note over server: - Send the notes in json format in the HTTP response
server --> browser: 200 OK\nResponse: json content
deactivate server
deactivate browser
note over browser: - Parse the json\n- Create a new <ul> element\n- Create new <li> element for each note and append them to the <ul>.\n- Add the <ul> to the <div class="notes">
end

@enduml